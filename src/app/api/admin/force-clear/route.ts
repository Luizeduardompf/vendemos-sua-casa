import { NextResponse } from 'next/server';
import { createClient } from '@/lib/supabase';

export async function POST() {
  try {
    const supabase = createClient();
    
    console.log('üßπ For√ßando limpeza completa...');
    
    // 1. Deletar todas as m√≠dias
    const { error: mediaError } = await supabase
      .from('imoveis_media')
      .delete()
      .neq('id', '00000000-0000-0000-0000-000000000000'); // Deletar tudo
    
    if (mediaError) {
      console.error('‚ùå Erro ao limpar m√≠dias:', mediaError);
    } else {
      console.log('‚úÖ M√≠dias limpas');
    }
    
    // 2. Deletar todas as amenities
    const { error: amenitiesError } = await supabase
      .from('imoveis_amenities')
      .delete()
      .neq('id', '00000000-0000-0000-0000-000000000000'); // Deletar tudo
    
    if (amenitiesError) {
      console.error('‚ùå Erro ao limpar amenities:', amenitiesError);
    } else {
      console.log('‚úÖ Amenities limpas');
    }
    
    // 3. Deletar todos os im√≥veis
    const { error: imoveisError } = await supabase
      .from('imoveis')
      .delete()
      .neq('id', '00000000-0000-0000-0000-000000000000'); // Deletar tudo
    
    if (imoveisError) {
      console.error('‚ùå Erro ao limpar im√≥veis:', imoveisError);
      return NextResponse.json(
        { error: 'Erro ao limpar im√≥veis', details: imoveisError },
        { status: 500 }
      );
    } else {
      console.log('‚úÖ Im√≥veis limpos');
    }
    
    // 4. Verificar se ficou vazio
    const { data: imoveisRestantes, error: checkError } = await supabase
      .from('imoveis')
      .select('id')
      .limit(1);
    
    if (checkError) {
      console.error('‚ùå Erro ao verificar:', checkError);
    } else {
      console.log(`üìä Im√≥veis restantes: ${imoveisRestantes?.length || 0}`);
    }
    
    return NextResponse.json({
      success: true,
      message: 'Limpeza for√ßada conclu√≠da!',
      imoveis_restantes: imoveisRestantes?.length || 0
    });
    
  } catch (error) {
    console.error('‚ùå Erro na limpeza:', error);
    return NextResponse.json(
      { error: 'Erro interno do servidor', details: error.message },
      { status: 500 }
    );
  }
}
